library(tidyverse)
library(data.table)
library(glue)
library(ggpubr)

#.libPaths("/home/sanj/apps/anaconda3/envs/pysanj/lib/R/library")
#.libPaths("/home/sanj/R/x86_64-pc-linux-gnu-library/3.6/")

##################
#### read in data #### I use the 'fread' function from the data.table package as it is very fast and convenient ###
### however, read.csv etc will also work. 
busia = fread("")

busia$group = str_remove(busia$Sample, "[:digit:]") ### add new column for each group 
busia$group = str_remove(busia$group, '_')
busia = busia[,c(1,3,4,7,6,5,2)] #reorder columns

### check the correct number of samples in each gene and sample ###
table(busia$Detector)
table(busia$Sample)

CYP6AA1 = busia %>% filter(Detector == 'CYP6AA1') %>% 
  mutate('sample_gene' = paste0(Sample, "_",Detector)) %>%
  select(-Well, -PlateID) %>% 
  group_by_at(vars(-Cq)) %>%
  summarise(Cq=mean(Cq))

EF = busia %>% filter(Detector == 'EF') %>% 
  mutate('sample_gene' = paste0(Sample, "_",Detector)) %>%
  select(-Well, -PlateID) %>% 
  group_by_at(vars(-Cq)) %>%
  summarise(Cq=mean(Cq))

S7 = busia %>% filter(Detector == 'S7') %>% 
  mutate('sample_gene' = paste0(Sample, "_",Detector)) %>%
  select(-Well, -PlateID) %>% 
  group_by_at(vars(-Cq)) %>%
  summarise(Cq=mean(Cq))

#average reference values for each sample
refs = (S7$Cq+EF$Cq)/2

#calculate delta CT values by taking ref average and substracting Cq of 6aa1
CYP6AA1$deltaCT = refs-CYP6AA1$Cq

#subset to each group
CYP6AA1_WT = CYP6AA1[CYP6AA1$group == 'WT',]
CYP6AA1_HET = CYP6AA1[CYP6AA1$group == 'HET',]
CYP6AA1_DUP = CYP6AA1[CYP6AA1$group == 'DUP',]

#### sd and confidence interval s
errdup = sd(CYP6AA1_DUP$deltaCT) *1.96 /sqrt(8)
errhet = sd(CYP6AA1_HET$deltaCT) *1.96 / sqrt(8)
errwt = sd(CYP6AA1_WT$deltaCT) *1.96 / sqrt(8)




#### get fold changes 
CYP6AA1_DUP_mean = mean(CYP6AA1_DUP$deltaCT)
CYP6AA1_HET_mean = mean(CYP6AA1_HET$deltaCT)
CYP6AA1_WT_mean = mean(CYP6AA1_WT$deltaCT)
### get condifence intervals
dup_lower = 2^((CYP6AA1_DUP_mean - errdup) - CYP6AA1_WT_mean)
dup_upper = 2^((CYP6AA1_DUP_mean + errdup) - CYP6AA1_WT_mean)

het_lower = 2^((CYP6AA1_HET_mean - errhet) - CYP6AA1_WT_mean)
het_upper = 2^((CYP6AA1_HET_mean + errhet) - CYP6AA1_WT_mean)

wt_lower = 2^((CYP6AA1_WT_mean - errwt) - CYP6AA1_WT_mean)
wt_upper = 2^((CYP6AA1_WT_mean + errwt) - CYP6AA1_WT_mean)


### get delta delta Ct values (log fold change to base amplication efficiency)
dup_wt = CYP6AA1_DUP_mean-CYP6AA1_WT_mean
dup_het = CYP6AA1_DUP_mean-CYP6AA1_HET_mean 
het_wt = CYP6AA1_HET_mean-CYP6AA1_WT_mean
wt_wt = CYP6AA1_WT_mean-CYP6AA1_WT_mean


## get fold change
FCdup_wt = 2^dup_wt
FCdup_wt
FCdup_het = 2^dup_het
FCdup_het
FChet_wt = 2^het_wt
FChet_wt
FCwt = 2^wt_wt
FCwt

FC = data.frame("Swept haplotype"= FCdup_wt,
                "Het"= FChet_wt,
                "Wild Type" = FCwt)

FC = gather(FC, "Genotype", "Fold Change")
FC$lower = c(dup_lower, het_lower, wt_lower)
FC$upper = c(dup_upper, het_upper, wt_upper)

### Test for homogenous variances ####
bartlett.test(list(CYP6AA1_WT$deltaCT, 
                   CYP6AA1_DUP$deltaCT, 
                   CYP6AA1_HET$deltaCT))

###### test for normality #### = normal
shapiro.test(CYP6AA1_WT$deltaCT)
shapiro.test(CYP6AA1_HET$deltaCT)
shapiro.test(CYP6AA1_DUP$deltaCT)


##### perform pairwise students t test for each comparison on deltaCTs####
t.test(CYP6AA1_WT$deltaCT, CYP6AA1_DUP$deltaCT)
t.test(CYP6AA1_WT$deltaCT, CYP6AA1_HET$deltaCT)
t.test(CYP6AA1_DUP$deltaCT, CYP6AA1_HET$deltaCT)
### ggpubr t test for plotting significance *** ### same results (not needed in end)
compare_means(deltaCT ~ group, 
              data=CYP6AA1,  method="t.test")

      
#### plot ####
FC$Genotype = c('Homozygous swept haplotype', 'Heterozygote', 'Homozygous wild type')
colnames(FC)[2] = "fold_change"


pdf("CYP6AA1_Fold_change.pdf")
plt = FC %>% ggplot(., aes(x=reorder(Genotype, -fold_change), y=fold_change, fill=Genotype)) +
  geom_bar(stat='identity', position='dodge', color='black') +
  geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2, alpha=0.8) + 
  geom_hline(yintercept = 1, linetype='dashed', alpha=0.3)+
  ylim(c(0,3.5)) +
  theme_light() +
  theme(legend.position = 'None',
        text = element_text(size=14))+
  labs(x="Genotype", y='Relative Fold Change') +
  scale_fill_brewer(palette = "Set2") +
  geom_signif(y_position=c(3.4, 2.6, 3.1), xmin=c(0.8, 1.8, 0.8), xmax=c(3.2, 3.2, 2.2),
              annotation=c("***", "**", "NS"), tip_length=0.02)

print(plt)
dev.off() 

ggsave("CYP6AA1_Fold_change.png", plt)
